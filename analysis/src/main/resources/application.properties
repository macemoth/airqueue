server:
  port : 8081

spring:
  cloud:
    function:
      definition: producer;consumer;globalConsumer
#    stream:
#      kafka:
#        bindings:
#          producer-out-0:
#            producer:
#              configuration:
#                value.serializer: com.example.dto.converters.MessageSerializer
#          producer-out-1:
#            producer:
#              configuration:
#                value.serializer: com.example.dto.converters.MessageSerializer
#          consumer-in-0:
#            consumer:
#              configuration:
#                value.deserializer: com.example.dto.converters.MessageDeSerializer
#          globalConsumer-in-0:
#            consumer:
#              configuration:
#                value.deserializer: com.example.dto.converters.MessageDeSerializer
#        binder:
#          brokers: localhost:29092
#
#      bindings:
#        producer-out-0:
#          destination : first-topic
#          producer:
#            useNativeEncoding: true # This enables using the custom serializer
#        producer-out-1:
#          destination: global-events
#          producer:
#            useNativeEncoding: true # This enables using the custom serializer
#        consumer-in-0:
#          destination : first-topic
#          consumer:
#            use-native-decoding: true # This enables using the custom deserializer
#        globalConsumer-in-0:
#          destination : global-events
#          globalConsumer:
#            use-native-decoding: true # This enables using the custom deserializer

  jackson:
    serialization:
      write-dates-as-timestamps: false